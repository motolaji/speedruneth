{"ast":null,"code":"import _slicedToArray from\"/Users/omotolajaji/challenge-1-decentralized-staking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Users/omotolajaji/challenge-1-decentralized-staking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/omotolajaji/challenge-1-decentralized-staking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import WalletConnectProvider from\"@walletconnect/web3-provider\";//import Torus from \"@toruslabs/torus-embed\"\nimport WalletLink from\"walletlink\";import{Alert,Button,Col,Menu,Row,List}from\"antd\";import\"antd/dist/antd.css\";import React,{useCallback,useEffect,useState}from\"react\";import{BrowserRouter,Link,Route,Switch}from\"react-router-dom\";import Web3Modal from\"web3modal\";import\"./App.css\";import{Account,Address,Balance,Contract,Faucet,GasGauge,Header,Ramp,ThemeSwitch}from\"./components\";import{INFURA_ID,NETWORK,NETWORKS}from\"./constants\";import{Transactor}from\"./helpers\";import{useBalance,useContractLoader,useContractReader,useGasPrice,useOnBlock,useUserProviderAndSigner}from\"eth-hooks\";import{useEventListener}from\"eth-hooks/events/useEventListener\";import{useExchangeEthPrice}from\"eth-hooks/dapps/dex\";// import Hints from \"./Hints\";\nimport{ExampleUI,Hints,Subgraph}from\"./views\";import{useContractConfig}from\"./hooks\";import Portis from\"@portis/web3\";import Fortmatic from\"fortmatic\";import Authereum from\"authereum\";import humanizeDuration from\"humanize-duration\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _require=require(\"ethers\"),ethers=_require.ethers;/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/ /// üì° What chain are your contracts deployed to?\nvar targetNetwork=NETWORKS.rinkeby;// <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\nvar DEBUG=true;var NETWORKCHECK=true;// üõ∞ providers\nif(DEBUG)console.log(\"üì° Connecting to Mainnet Ethereum\");// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nvar scaffoldEthProvider=navigator.onLine?new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\"):null;var poktMainnetProvider=navigator.onLine?new ethers.providers.StaticJsonRpcProvider(\"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\"):null;var mainnetInfura=navigator.onLine?new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\"+INFURA_ID):null;// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n// üè† Your local provider is usually pointed at your local blockchain\nvar localProviderUrl=targetNetwork.rpcUrl;// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nvar localProviderUrlFromEnv=process.env.REACT_APP_PROVIDER?process.env.REACT_APP_PROVIDER:localProviderUrl;if(DEBUG)console.log(\"üè† Connecting to provider:\",localProviderUrlFromEnv);var localProvider=new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);// üî≠ block explorer URL\nvar blockExplorer=targetNetwork.blockExplorer;// Coinbase walletLink init\nvar walletLink=new WalletLink({appName:\"coinbase\"});// WalletLink provider\nvar walletLinkProvider=walletLink.makeWeb3Provider(\"https://mainnet.infura.io/v3/\".concat(INFURA_ID),1);// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/var web3Modal=new Web3Modal({network:\"mainnet\",// Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\ncacheProvider:true,// optional\ntheme:\"light\",// optional. Change to \"dark\" for a dark theme.\nproviderOptions:{walletconnect:{package:WalletConnectProvider,// required\noptions:{bridge:\"https://polygon.bridge.walletconnect.org\",infuraId:INFURA_ID,rpc:{1:\"https://mainnet.infura.io/v3/\".concat(INFURA_ID),// mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n42:\"https://kovan.infura.io/v3/\".concat(INFURA_ID),100:\"https://dai.poa.network\"// xDai\n}}},portis:{display:{logo:\"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",name:\"Portis\",description:\"Connect to Portis App\"},package:Portis,options:{id:\"6255fb2b-58c8-433b-a2c9-62098c05ddc9\"}},fortmatic:{package:Fortmatic,// required\noptions:{key:\"pk_live_5A7C91B2FC585A17\"// required\n}},// torus: {\n//   package: Torus,\n//   options: {\n//     networkParams: {\n//       host: \"https://localhost:8545\", // optional\n//       chainId: 1337, // optional\n//       networkId: 1337 // optional\n//     },\n//     config: {\n//       buildEnv: \"development\" // optional\n//     },\n//   },\n// },\n\"custom-walletlink\":{display:{logo:\"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",name:\"Coinbase\",description:\"Connect to Coinbase Wallet (not Coinbase App)\"},package:walletLinkProvider,connector:function(){var _connector=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(provider,_options){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return provider.enable();case 2:return _context.abrupt(\"return\",provider);case 3:case\"end\":return _context.stop();}}},_callee);}));function connector(_x,_x2){return _connector.apply(this,arguments);}return connector;}()},authereum:{package:Authereum// required\n}}});function App(props){var mainnetProvider=poktMainnetProvider&&poktMainnetProvider._isProvider?poktMainnetProvider:scaffoldEthProvider&&scaffoldEthProvider._network?scaffoldEthProvider:mainnetInfura;var _useState=useState(),_useState2=_slicedToArray(_useState,2),injectedProvider=_useState2[0],setInjectedProvider=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),address=_useState4[0],setAddress=_useState4[1];var logoutOfWeb3Modal=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return web3Modal.clearCachedProvider();case 2:if(!(injectedProvider&&injectedProvider.provider&&typeof injectedProvider.provider.disconnect==\"function\")){_context2.next=5;break;}_context2.next=5;return injectedProvider.provider.disconnect();case 5:setTimeout(function(){window.location.reload();},1);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function logoutOfWeb3Modal(){return _ref.apply(this,arguments);};}();/* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */var price=useExchangeEthPrice(targetNetwork,mainnetProvider);/* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */var gasPrice=useGasPrice(targetNetwork,\"fast\");// Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\nvar userProviderAndSigner=useUserProviderAndSigner(injectedProvider,localProvider);var userSigner=userProviderAndSigner.signer;useEffect(function(){function getAddress(){return _getAddress.apply(this,arguments);}function _getAddress(){_getAddress=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var newAddress;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!userSigner){_context3.next=5;break;}_context3.next=3;return userSigner.getAddress();case 3:newAddress=_context3.sent;setAddress(newAddress);case 5:case\"end\":return _context3.stop();}}},_callee3);}));return _getAddress.apply(this,arguments);}getAddress();},[userSigner]);// You can warn the user if you would like them to be on a specific network\nvar localChainId=localProvider&&localProvider._network&&localProvider._network.chainId;var selectedChainId=userSigner&&userSigner.provider&&userSigner.provider._network&&userSigner.provider._network.chainId;// For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n// The transactor wraps transactions and provides notificiations\nvar tx=Transactor(userSigner,gasPrice);// Faucet Tx can be used to send funds from the faucet\nvar faucetTx=Transactor(localProvider,gasPrice);// üèó scaffold-eth is full of handy hooks like this one to get your balance:\nvar yourLocalBalance=useBalance(localProvider,address);// Just plug in different üõ∞ providers to get your balance on different chains:\nvar yourMainnetBalance=useBalance(mainnetProvider,address);var contractConfig=useContractConfig();// Load in your local üìù contract and read a value from it:\nvar readContracts=useContractLoader(localProvider,contractConfig);// If you want to make üîê write transactions to your contracts, use the userSigner:\nvar writeContracts=useContractLoader(userSigner,contractConfig,localChainId);// EXTERNAL CONTRACT EXAMPLE:\n//\n// If you want to bring in the mainnet DAI contract it would look like:\nvar mainnetContracts=useContractLoader(mainnetProvider,contractConfig);// If you want to call a function on a new block\nuseOnBlock(mainnetProvider,function(){console.log(\"\\u26D3 A new mainnet block is here: \".concat(mainnetProvider._lastBlockNumber));});// Then read your DAI balance like:\nvar myMainnetDAIBalance=useContractReader(mainnetContracts,\"DAI\",\"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]);//keep track of contract balance to know how much has been staked total:\nvar stakerContractBalance=useBalance(localProvider,readContracts&&readContracts.Staker?readContracts.Staker.address:null);if(DEBUG)console.log(\"üíµ stakerContractBalance\",stakerContractBalance);// ** keep track of total 'threshold' needed of ETH\nvar threshold=useContractReader(readContracts,\"Staker\",\"threshold\");console.log(\"üíµ threshold:\",threshold);// ** keep track of a variable from the contract in the local React state:\nvar balanceStaked=useContractReader(readContracts,\"Staker\",\"balances\",[address]);console.log(\"üí∏ balanceStaked:\",balanceStaked);// ** üìü Listen for broadcast events\nvar stakeEvents=useEventListener(readContracts,\"Staker\",\"Stake\",localProvider,1);console.log(\"üìü stake events:\",stakeEvents);// ** keep track of a variable from the contract in the local React state:\nvar timeLeft=useContractReader(readContracts,\"Staker\",\"timeLeft\");console.log(\"‚è≥ timeLeft:\",timeLeft);// ** Listen for when the contract has been 'completed'\nvar complete=useContractReader(readContracts,\"ExampleExternalContract\",\"completed\");console.log(\"‚úÖ complete:\",complete);var exampleExternalContractBalance=useBalance(localProvider,readContracts&&readContracts.ExampleExternalContract?readContracts.ExampleExternalContract.address:null);if(DEBUG)console.log(\"üíµ exampleExternalContractBalance\",exampleExternalContractBalance);var completeDisplay=\"\";if(complete){completeDisplay=/*#__PURE__*/_jsxs(\"div\",{style:{padding:64,backgroundColor:\"#eeffef\",fontWeight:\"bolder\"},children:[\"\\uD83D\\uDE80 \\uD83C\\uDF96 \\uD83D\\uDC69\\u200D\\uD83D\\uDE80 - Staking App triggered `ExampleExternalContract` -- \\uD83C\\uDF89 \\uD83C\\uDF7E \\uD83C\\uDF8A\",/*#__PURE__*/_jsx(Balance,{balance:exampleExternalContractBalance,fontSize:64}),\" ETH staked!\"]});}/*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\", addressFromENS)\n  */ //\n// üß´ DEBUG üë®üèª‚Äçüî¨\n//\nuseEffect(function(){if(DEBUG&&mainnetProvider&&address&&selectedChainId&&yourLocalBalance&&yourMainnetBalance&&readContracts&&writeContracts&&mainnetContracts){console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");console.log(\"üåé mainnetProvider\",mainnetProvider);console.log(\"üè† localChainId\",localChainId);console.log(\"üë©‚Äçüíº selected address:\",address);console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\",selectedChainId);console.log(\"üíµ yourLocalBalance\",yourLocalBalance?ethers.utils.formatEther(yourLocalBalance):\"...\");console.log(\"üíµ yourMainnetBalance\",yourMainnetBalance?ethers.utils.formatEther(yourMainnetBalance):\"...\");console.log(\"üìù readContracts\",readContracts);console.log(\"üåç DAI contract on mainnet:\",mainnetContracts);console.log(\"üíµ yourMainnetDAIBalance\",myMainnetDAIBalance);console.log(\"üîê writeContracts\",writeContracts);}},[mainnetProvider,address,selectedChainId,yourLocalBalance,yourMainnetBalance,readContracts,writeContracts,mainnetContracts]);var networkDisplay=\"\";if(NETWORKCHECK&&localChainId&&selectedChainId&&localChainId!==selectedChainId){var networkSelected=NETWORK(selectedChainId);var networkLocal=NETWORK(localChainId);if(selectedChainId===1337&&localChainId===31337){networkDisplay=/*#__PURE__*/_jsx(\"div\",{style:{zIndex:2,position:\"absolute\",right:0,top:60,padding:16},children:/*#__PURE__*/_jsx(Alert,{message:\"\\u26A0\\uFE0F Wrong Network ID\",description:/*#__PURE__*/_jsxs(\"div\",{children:[\"You have \",/*#__PURE__*/_jsx(\"b\",{children:\"chain id 1337\"}),\" for localhost and you need to change it to \",/*#__PURE__*/_jsx(\"b\",{children:\"31337\"}),\" to work with HardHat.\",/*#__PURE__*/_jsx(\"div\",{children:\"(MetaMask -> Settings -> Networks -> Chain ID -> 31337)\"})]}),type:\"error\",closable:false})});}else{networkDisplay=/*#__PURE__*/_jsx(\"div\",{style:{zIndex:2,position:\"absolute\",right:0,top:60,padding:16},children:/*#__PURE__*/_jsx(Alert,{message:\"\\u26A0\\uFE0F Wrong Network\",description:/*#__PURE__*/_jsxs(\"div\",{children:[\"You have \",/*#__PURE__*/_jsx(\"b\",{children:networkSelected&&networkSelected.name}),\" selected and you need to be on\",\" \",/*#__PURE__*/_jsx(Button,{onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var ethereum,data,switchTx;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:ethereum=window.ethereum;data=[{chainId:\"0x\"+targetNetwork.chainId.toString(16),chainName:targetNetwork.name,nativeCurrency:targetNetwork.nativeCurrency,rpcUrls:[targetNetwork.rpcUrl],blockExplorerUrls:[targetNetwork.blockExplorer]}];console.log(\"data\",data);_context4.prev=3;_context4.next=6;return ethereum.request({method:\"wallet_switchEthereumChain\",params:[{chainId:data[0].chainId}]});case 6:switchTx=_context4.sent;_context4.next=19;break;case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](3);_context4.prev=11;_context4.next=14;return ethereum.request({method:\"wallet_addEthereumChain\",params:data});case 14:switchTx=_context4.sent;_context4.next=19;break;case 17:_context4.prev=17;_context4.t1=_context4[\"catch\"](11);case 19:if(switchTx){console.log(switchTx);}case 20:case\"end\":return _context4.stop();}}},_callee4,null,[[3,9],[11,17]]);})),children:/*#__PURE__*/_jsx(\"b\",{children:networkLocal&&networkLocal.name})})]}),type:\"error\",closable:false})});}}else{networkDisplay=/*#__PURE__*/_jsx(\"div\",{style:{zIndex:-1,position:\"absolute\",right:154,top:28,padding:16,color:targetNetwork.color},children:targetNetwork.name});}var loadWeb3Modal=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var provider;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return web3Modal.connect();case 2:provider=_context5.sent;setInjectedProvider(new ethers.providers.Web3Provider(provider));provider.on(\"chainChanged\",function(chainId){console.log(\"chain changed to \".concat(chainId,\"! updating providers\"));setInjectedProvider(new ethers.providers.Web3Provider(provider));});provider.on(\"accountsChanged\",function(){console.log(\"account changed!\");setInjectedProvider(new ethers.providers.Web3Provider(provider));});// Subscribe to session disconnection\nprovider.on(\"disconnect\",function(code,reason){console.log(code,reason);logoutOfWeb3Modal();});case 7:case\"end\":return _context5.stop();}}},_callee5);})),[setInjectedProvider]);useEffect(function(){if(web3Modal.cachedProvider){loadWeb3Modal();}},[loadWeb3Modal]);var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),route=_useState6[0],setRoute=_useState6[1];useEffect(function(){setRoute(window.location.pathname);},[setRoute]);var faucetHint=\"\";var faucetAvailable=localProvider&&localProvider.connection&&targetNetwork.name.indexOf(\"local\")!==-1;var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),faucetClicked=_useState8[0],setFaucetClicked=_useState8[1];if(!faucetClicked&&localProvider&&localProvider._network&&localProvider._network.chainId===31337&&yourLocalBalance&&ethers.utils.formatEther(yourLocalBalance)<=0){faucetHint=/*#__PURE__*/_jsx(\"div\",{style:{padding:16},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:function onClick(){faucetTx({to:address,value:ethers.utils.parseEther(\"0.01\")});setFaucetClicked(true);},children:\"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),networkDisplay,/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsxs(Menu,{style:{textAlign:\"center\"},selectedKeys:[route],mode:\"horizontal\",children:[/*#__PURE__*/_jsx(Menu.Item,{children:/*#__PURE__*/_jsx(Link,{onClick:function onClick(){setRoute(\"/\");},to:\"/\",children:\"Staker UI\"})},\"/\"),/*#__PURE__*/_jsx(Menu.Item,{children:/*#__PURE__*/_jsx(Link,{onClick:function onClick(){setRoute(\"/contracts\");},to:\"/contracts\",children:\"Debug Contracts\"})},\"/contracts\")]}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsxs(Route,{exact:true,path:\"/\",children:[completeDisplay,/*#__PURE__*/_jsxs(\"div\",{style:{padding:8,marginTop:32},children:[/*#__PURE__*/_jsx(\"div\",{children:\"Staker Contract:\"}),/*#__PURE__*/_jsx(Address,{value:readContracts&&readContracts.Staker&&readContracts.Staker.address})]}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:8,marginTop:32},children:[/*#__PURE__*/_jsx(\"div\",{children:\"Timeleft:\"}),timeLeft&&humanizeDuration(timeLeft.toNumber()*1000)]}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:8},children:[/*#__PURE__*/_jsx(\"div\",{children:\"Total staked:\"}),/*#__PURE__*/_jsx(Balance,{balance:stakerContractBalance,fontSize:64}),\"/\",/*#__PURE__*/_jsx(Balance,{balance:threshold,fontSize:64})]}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:8},children:[/*#__PURE__*/_jsx(\"div\",{children:\"You staked:\"}),/*#__PURE__*/_jsx(Balance,{balance:balanceStaked,fontSize:64})]}),/*#__PURE__*/_jsx(\"div\",{style:{padding:8},children:/*#__PURE__*/_jsx(Button,{type:\"default\",onClick:function onClick(){tx(writeContracts.Staker.execute());},children:\"\\uD83D\\uDCE1 Execute!\"})}),/*#__PURE__*/_jsx(\"div\",{style:{padding:8},children:/*#__PURE__*/_jsx(Button,{type:\"default\",onClick:function onClick(){tx(writeContracts.Staker.withdraw());},children:\"\\uD83C\\uDFE7 Withdraw\"})}),/*#__PURE__*/_jsx(\"div\",{style:{padding:8},children:/*#__PURE__*/_jsx(Button,{type:balanceStaked?\"success\":\"primary\",onClick:function onClick(){tx(writeContracts.Staker.stake({value:ethers.utils.parseEther(\"0.5\")}));},children:\"\\uD83E\\uDD69 Stake 0.5 ether!\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{width:500,margin:\"auto\",marginTop:64},children:[/*#__PURE__*/_jsx(\"div\",{children:\"Stake Events:\"}),/*#__PURE__*/_jsx(List,{dataSource:stakeEvents,renderItem:function renderItem(item){return/*#__PURE__*/_jsxs(List.Item,{children:[/*#__PURE__*/_jsx(Address,{value:item.args[0],ensProvider:mainnetProvider,fontSize:16}),\" =>\",/*#__PURE__*/_jsx(Balance,{balance:item.args[1]})]},item.blockNumber);}})]})]}),/*#__PURE__*/_jsxs(Route,{path:\"/contracts\",children:[/*#__PURE__*/_jsx(Contract,{name:\"Staker\",signer:userSigner,provider:localProvider,address:address,blockExplorer:blockExplorer,contractConfig:contractConfig}),/*#__PURE__*/_jsx(Contract,{name:\"ExampleExternalContract\",signer:userSigner,provider:localProvider,address:address,blockExplorer:blockExplorer,contractConfig:contractConfig})]})]})]}),/*#__PURE__*/_jsx(ThemeSwitch,{}),/*#__PURE__*/_jsxs(\"div\",{style:{position:\"fixed\",textAlign:\"right\",right:0,top:0,padding:10},children:[/*#__PURE__*/_jsx(Account,{address:address,localProvider:localProvider,userSigner:userSigner,mainnetProvider:mainnetProvider,price:price,web3Modal:web3Modal,loadWeb3Modal:loadWeb3Modal,logoutOfWeb3Modal:logoutOfWeb3Modal,blockExplorer:blockExplorer}),faucetHint]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:32,opacity:0.5},children:[\"Created by \",/*#__PURE__*/_jsx(Address,{value:\"Your...address\",ensProvider:mainnetProvider,fontSize:16})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:32,opacity:0.5},children:/*#__PURE__*/_jsx(\"a\",{target:\"_blank\",style:{padding:32,color:\"#000\"},href:\"https://github.com/scaffold-eth/scaffold-eth\",children:\"\\uD83C\\uDF74 Fork me!\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{position:\"fixed\",textAlign:\"left\",left:0,bottom:20,padding:10},children:[/*#__PURE__*/_jsxs(Row,{align:\"middle\",gutter:[4,4],children:[/*#__PURE__*/_jsx(Col,{span:8,children:/*#__PURE__*/_jsx(Ramp,{price:price,address:address,networks:NETWORKS})}),/*#__PURE__*/_jsx(Col,{span:8,style:{textAlign:\"center\",opacity:0.8},children:/*#__PURE__*/_jsx(GasGauge,{gasPrice:gasPrice})}),/*#__PURE__*/_jsx(Col,{span:8,style:{textAlign:\"center\",opacity:1},children:/*#__PURE__*/_jsxs(Button,{onClick:function onClick(){window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");},size:\"large\",shape:\"round\",children:[/*#__PURE__*/_jsx(\"span\",{style:{marginRight:8},role:\"img\",\"aria-label\":\"support\",children:\"\\uD83D\\uDCAC\"}),\"Support\"]})})]}),/*#__PURE__*/_jsx(Row,{align:\"middle\",gutter:[4,4],children:/*#__PURE__*/_jsx(Col,{span:24,children:/*  if the local provider has a signer, let's show the faucet:  */faucetAvailable?/*#__PURE__*/_jsx(Faucet,{localProvider:localProvider,price:price,ensProvider:mainnetProvider}):\"\"})})]})]});}export default App;","map":{"version":3,"sources":["/Users/omotolajaji/challenge-1-decentralized-staking/packages/react-app/src/App.jsx"],"names":["WalletConnectProvider","WalletLink","Alert","Button","Col","Menu","Row","List","React","useCallback","useEffect","useState","BrowserRouter","Link","Route","Switch","Web3Modal","Account","Address","Balance","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","INFURA_ID","NETWORK","NETWORKS","Transactor","useBalance","useContractLoader","useContractReader","useGasPrice","useOnBlock","useUserProviderAndSigner","useEventListener","useExchangeEthPrice","ExampleUI","Hints","Subgraph","useContractConfig","Portis","Fortmatic","Authereum","humanizeDuration","require","ethers","targetNetwork","rinkeby","DEBUG","NETWORKCHECK","console","log","scaffoldEthProvider","navigator","onLine","providers","StaticJsonRpcProvider","poktMainnetProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","walletLink","appName","walletLinkProvider","makeWeb3Provider","web3Modal","network","cacheProvider","theme","providerOptions","walletconnect","package","options","bridge","infuraId","rpc","portis","display","logo","name","description","id","fortmatic","key","connector","provider","_options","enable","authereum","App","props","mainnetProvider","_isProvider","_network","injectedProvider","setInjectedProvider","address","setAddress","logoutOfWeb3Modal","clearCachedProvider","disconnect","setTimeout","window","location","reload","price","gasPrice","userProviderAndSigner","userSigner","signer","getAddress","newAddress","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","contractConfig","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","stakerContractBalance","Staker","threshold","balanceStaked","stakeEvents","timeLeft","complete","exampleExternalContractBalance","ExampleExternalContract","completeDisplay","padding","backgroundColor","fontWeight","utils","formatEther","networkDisplay","networkSelected","networkLocal","zIndex","position","right","top","ethereum","data","toString","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","request","method","params","switchTx","color","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","route","setRoute","pathname","faucetHint","faucetAvailable","connection","indexOf","faucetClicked","setFaucetClicked","to","value","parseEther","textAlign","marginTop","toNumber","execute","withdraw","stake","width","margin","item","args","blockNumber","opacity","left","bottom","open","marginRight"],"mappings":"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","sourcesContent":["import WalletConnectProvider from \"@walletconnect/web3-provider\";\n//import Torus from \"@toruslabs/torus-embed\"\nimport WalletLink from \"walletlink\";\nimport { Alert, Button, Col, Menu, Row, List } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Address, Balance, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\n// import Hints from \"./Hints\";\nimport { ExampleUI, Hints, Subgraph } from \"./views\";\n\nimport { useContractConfig } from \"./hooks\";\nimport Portis from \"@portis/web3\";\nimport Fortmatic from \"fortmatic\";\nimport Authereum from \"authereum\";\nimport humanizeDuration from \"humanize-duration\";\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// üì° What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS.rinkeby; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\n\n// üõ∞ providers\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nconst scaffoldEthProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\n  : null;\nconst poktMainnetProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\n      \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n    )\n  : null;\nconst mainnetInfura = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\n  : null;\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n\n// üè† Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// üî≠ block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: \"coinbase\",\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\n\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true, // optional\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\", // xDai\n        },\n      },\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\",\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\n      },\n    },\n    fortmatic: {\n      package: Fortmatic, // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\", // required\n      },\n    },\n    // torus: {\n    //   package: Torus,\n    //   options: {\n    //     networkParams: {\n    //       host: \"https://localhost:8545\", // optional\n    //       chainId: 1337, // optional\n    //       networkId: 1337 // optional\n    //     },\n    //     config: {\n    //       buildEnv: \"development\" // optional\n    //     },\n    //   },\n    // },\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\",\n      },\n      package: walletLinkProvider,\n      connector: async (provider, _options) => {\n        await provider.enable();\n        return provider;\n      },\n    },\n    authereum: {\n      package: Authereum, // required\n    },\n  },\n});\n\nfunction App(props) {\n  const mainnetProvider =\n    poktMainnetProvider && poktMainnetProvider._isProvider\n      ? poktMainnetProvider\n      : scaffoldEthProvider && scaffoldEthProvider._network\n      ? scaffoldEthProvider\n      : mainnetInfura;\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  const contractConfig = useContractConfig();\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make üîê write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  //keep track of contract balance to know how much has been staked total:\n  const stakerContractBalance = useBalance(\n    localProvider,\n    readContracts && readContracts.Staker ? readContracts.Staker.address : null,\n  );\n  if (DEBUG) console.log(\"üíµ stakerContractBalance\", stakerContractBalance);\n\n  // ** keep track of total 'threshold' needed of ETH\n  const threshold = useContractReader(readContracts, \"Staker\", \"threshold\");\n  console.log(\"üíµ threshold:\", threshold);\n\n  // ** keep track of a variable from the contract in the local React state:\n  const balanceStaked = useContractReader(readContracts, \"Staker\", \"balances\", [address]);\n  console.log(\"üí∏ balanceStaked:\", balanceStaked);\n\n  // ** üìü Listen for broadcast events\n  const stakeEvents = useEventListener(readContracts, \"Staker\", \"Stake\", localProvider, 1);\n  console.log(\"üìü stake events:\", stakeEvents);\n\n  // ** keep track of a variable from the contract in the local React state:\n  const timeLeft = useContractReader(readContracts, \"Staker\", \"timeLeft\");\n  console.log(\"‚è≥ timeLeft:\", timeLeft);\n\n  // ** Listen for when the contract has been 'completed'\n  const complete = useContractReader(readContracts, \"ExampleExternalContract\", \"completed\");\n  console.log(\"‚úÖ complete:\", complete);\n\n  const exampleExternalContractBalance = useBalance(\n    localProvider,\n    readContracts && readContracts.ExampleExternalContract ? readContracts.ExampleExternalContract.address : null,\n  );\n  if (DEBUG) console.log(\"üíµ exampleExternalContractBalance\", exampleExternalContractBalance);\n\n  let completeDisplay = \"\";\n  if (complete) {\n    completeDisplay = (\n      <div style={{ padding: 64, backgroundColor: \"#eeffef\", fontWeight: \"bolder\" }}>\n        üöÄ üéñ üë©‚ÄçüöÄ - Staking App triggered `ExampleExternalContract` -- üéâ üçæ üéä\n        <Balance balance={exampleExternalContractBalance} fontSize={64} /> ETH staked!\n      </div>\n    );\n  }\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\", addressFromENS)\n  */\n\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n  ]);\n\n  let networkDisplay = \"\";\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <Button\n                  onClick={async () => {\n                    const ethereum = window.ethereum;\n                    const data = [\n                      {\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                        chainName: targetNetwork.name,\n                        nativeCurrency: targetNetwork.nativeCurrency,\n                        rpcUrls: [targetNetwork.rpcUrl],\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\n                      },\n                    ];\n                    console.log(\"data\", data);\n\n                    let switchTx;\n                    // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n                    try {\n                      switchTx = await ethereum.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: data[0].chainId }],\n                      });\n                    } catch (switchError) {\n                      // not checking specific error code, because maybe we're not using MetaMask\n                      try {\n                        switchTx = await ethereum.request({\n                          method: \"wallet_addEthereumChain\",\n                          params: data,\n                        });\n                      } catch (addError) {\n                        // handle \"add\" error\n                      }\n                    }\n\n                    if (switchTx) {\n                      console.log(switchTx);\n                    }\n                  }}\n                >\n                  <b>{networkLocal && networkLocal.name}</b>\n                </Button>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    ethers.utils.formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: ethers.utils.parseEther(\"0.01\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n      <BrowserRouter>\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link\n              onClick={() => {\n                setRoute(\"/\");\n              }}\n              to=\"/\"\n            >\n              Staker UI\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/contracts\">\n            <Link\n              onClick={() => {\n                setRoute(\"/contracts\");\n              }}\n              to=\"/contracts\"\n            >\n              Debug Contracts\n            </Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {completeDisplay}\n\n            <div style={{ padding: 8, marginTop: 32 }}>\n              <div>Staker Contract:</div>\n              <Address value={readContracts && readContracts.Staker && readContracts.Staker.address} />\n            </div>\n\n            <div style={{ padding: 8, marginTop: 32 }}>\n              <div>Timeleft:</div>\n              {timeLeft && humanizeDuration(timeLeft.toNumber() * 1000)}\n            </div>\n\n            <div style={{ padding: 8 }}>\n              <div>Total staked:</div>\n              <Balance balance={stakerContractBalance} fontSize={64} />/<Balance balance={threshold} fontSize={64} />\n            </div>\n\n            <div style={{ padding: 8 }}>\n              <div>You staked:</div>\n              <Balance balance={balanceStaked} fontSize={64} />\n            </div>\n\n            <div style={{ padding: 8 }}>\n              <Button\n                type={\"default\"}\n                onClick={() => {\n                  tx(writeContracts.Staker.execute());\n                }}\n              >\n                üì° Execute!\n              </Button>\n            </div>\n\n            <div style={{ padding: 8 }}>\n              <Button\n                type={\"default\"}\n                onClick={() => {\n                  tx(writeContracts.Staker.withdraw());\n                }}\n              >\n                üèß Withdraw\n              </Button>\n            </div>\n\n            <div style={{ padding: 8 }}>\n              <Button\n                type={balanceStaked ? \"success\" : \"primary\"}\n                onClick={() => {\n                  tx(writeContracts.Staker.stake({ value: ethers.utils.parseEther(\"0.5\") }));\n                }}\n              >\n                ü•© Stake 0.5 ether!\n              </Button>\n            </div>\n\n            {/*\n                üéõ this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n            <div style={{ width: 500, margin: \"auto\", marginTop: 64 }}>\n              <div>Stake Events:</div>\n              <List\n                dataSource={stakeEvents}\n                renderItem={item => {\n                  return (\n                    <List.Item key={item.blockNumber}>\n                      <Address value={item.args[0]} ensProvider={mainnetProvider} fontSize={16} /> =>\n                      <Balance balance={item.args[1]} />\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n\n            {/* uncomment for a second contract:\n            <Contract\n              name=\"SecondContract\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n            */}\n          </Route>\n          <Route path=\"/contracts\">\n            <Contract\n              name=\"Staker\"\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n            <Contract\n              name=\"ExampleExternalContract\"\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userSigner={userSigner}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n        {faucetHint}\n      </div>\n\n      <div style={{ marginTop: 32, opacity: 0.5 }}>\n        {/* Add your address here */}\n        Created by <Address value={\"Your...address\"} ensProvider={mainnetProvider} fontSize={16} />\n      </div>\n\n      <div style={{ marginTop: 32, opacity: 0.5 }}>\n        <a target=\"_blank\" style={{ padding: 32, color: \"#000\" }} href=\"https://github.com/scaffold-eth/scaffold-eth\">\n          üç¥ Fork me!\n        </a>\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                üí¨\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}